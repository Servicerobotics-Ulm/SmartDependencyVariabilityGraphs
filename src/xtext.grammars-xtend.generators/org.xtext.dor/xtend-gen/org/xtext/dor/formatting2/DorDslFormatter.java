/**
 * generated by Xtext 2.21.0
 */
package org.xtext.dor.formatting2;

import com.google.inject.Inject;
import dor.BoundedDataObjectDef;
import dor.DataObjectRepo;
import dor.ElementDef;
import dor.UnboundedDataObjectDef;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.dor.services.DorDslGrammarAccess;

@SuppressWarnings("all")
public class DorDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DorDslGrammarAccess _dorDslGrammarAccess;

  protected void _format(final DataObjectRepo dataObjectRepo, @Extension final IFormattableDocument document) {
    EList<UnboundedDataObjectDef> _udod = dataObjectRepo.getUdod();
    for (final UnboundedDataObjectDef unboundedDataObjectDef : _udod) {
      document.<UnboundedDataObjectDef>format(unboundedDataObjectDef);
    }
    EList<BoundedDataObjectDef> _bdod = dataObjectRepo.getBdod();
    for (final BoundedDataObjectDef boundedDataObjectDef : _bdod) {
      document.<BoundedDataObjectDef>format(boundedDataObjectDef);
    }
  }

  protected void _format(final UnboundedDataObjectDef unboundedDataObjectDef, @Extension final IFormattableDocument document) {
    EList<ElementDef> _ed = unboundedDataObjectDef.getEd();
    for (final ElementDef elementDef : _ed) {
      document.<ElementDef>format(elementDef);
    }
  }

  public void format(final Object unboundedDataObjectDef, final IFormattableDocument document) {
    if (unboundedDataObjectDef instanceof XtextResource) {
      _format((XtextResource)unboundedDataObjectDef, document);
      return;
    } else if (unboundedDataObjectDef instanceof UnboundedDataObjectDef) {
      _format((UnboundedDataObjectDef)unboundedDataObjectDef, document);
      return;
    } else if (unboundedDataObjectDef instanceof DataObjectRepo) {
      _format((DataObjectRepo)unboundedDataObjectDef, document);
      return;
    } else if (unboundedDataObjectDef instanceof EObject) {
      _format((EObject)unboundedDataObjectDef, document);
      return;
    } else if (unboundedDataObjectDef == null) {
      _format((Void)null, document);
      return;
    } else if (unboundedDataObjectDef != null) {
      _format(unboundedDataObjectDef, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(unboundedDataObjectDef, document).toString());
    }
  }
}
