/*
 * generated by Xtext 2.21.0
 */
package org.xtext.bb.formatting2

import BbDvgTcl.BuildingBlock
import BbDvgTcl.BuildingBlockDescription
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.bb.services.BbDslGrammarAccess

class BbDslFormatter extends AbstractFormatter2 {
	
	@Inject extension BbDslGrammarAccess

	def dispatch void format(BuildingBlockDescription buildingBlockDescription, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (buildingBlock : buildingBlockDescription.bb) {
			buildingBlock.format
		}
		for (decomposition : buildingBlockDescription.dt) {
			decomposition.format
		}
		for (container : buildingBlockDescription.c) {
			container.format
		}
	}

	def dispatch void format(BuildingBlock buildingBlock, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		buildingBlock.ves.format
		for (output : buildingBlock.o) {
			output.format
		}
		for (inputRelationship : buildingBlock.ir) {
			inputRelationship.format
		}
		buildingBlock.sharedresources.format
	}
	
	// TODO: implement for DVG, Container, VariabilityEntitySet, Output, BuildingBlockInst, ParameterSet, PropertySet, ContextSet, PortElementSet, ParameterInst, ElementDef, BoundedDataObjectDef, UnboundedDataObjectDef, SIUnit, ComplexVSPInit, IntegerVSPInit, RealVSPInit, VI, Element, Bool, Integer, Real, String, PropertyInst, ContextInst, PortElement, Input, Mandatory, Optional, AND, XOR, OR, Loop, Sequential, Parallel, ConditionalFork, EquivalenceFork, Unsequenceable, Number, Condition, BBContainer, EPROD, EQUF, INIT, SAPRO, COMF, RPRO, APRO, TRAN, PTCC, CONT, MAGR, DMAGR, InitPort, InitCPort, InitWSMPort, StaticWeights, CombinationAssignment, Combination, Equal, Description, Precondition, Core, InternalCOMF, LinearNormalization, AGGR, DAGGR
}
